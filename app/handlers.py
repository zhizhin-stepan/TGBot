from aiogram import F, Router, types
from aiogram.types import Message, CallbackQuery, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import CommandStart, Command
from aiogram.types.web_app_info import WebAppInfo

import app.keyboards as kb


router = Router()


# @router.message(F.text == '—Ñ—Ñ')
# async def handle_start(message: Message):
#     await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:", reply_markup = kb.webAppPageFirst)
    

@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(
        '–ü—Ä–∏–≤–µ—Ç! üëã–Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤. '\
        '–ü–æ–º–æ–≥—É —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è, –∫–∞–∫ –∑–∞–∫—Ä—ã—Ç—å –¥–æ–ª–≥–∏ –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º: –ø–æ–¥—Å–∫–∞–∂—É, —á—Ç–æ –¥–µ–ª–∞—Ç—å, –∫—É–¥–∞ –∏–¥—Ç–∏ –∏ –∫ –∫–æ–º—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è. '\
        '–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ ‚Äî –ø—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å, —è –Ω–∞ —Å–≤—è–∑–∏ üí¨', 
        reply_markup = kb.start)


@router.message(F.text == '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å')
async def debts_algorithm(message: Message):
    await message.answer(
        '‚úèÔ∏è –ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å ‚Äî —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å –µ–≥–æ —Ä–µ—à–∏—Ç—å!',
        #–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –ò–ò
        reply_markup = kb.webAppPageFirst)


@router.message(F.text == '–ê–ª–≥–æ—Ä–∏—Ç–º –∑–∞–∫—Ä—ã—Ç–∏—è –¥–æ–ª–≥–æ–≤')
async def debts_algorithm(message: Message):
    await message.answer(
        '–ß—Ç–æ–±—ã —è –º–æ–≥ —Ç–µ–±–µ –ø–æ–º–æ—á—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —Ñ–æ—Ä–º—É —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ ‚Äî –∫–∞–∫ –∏–º–µ–Ω–Ω–æ —Ç—ã –µ–≥–æ –ø—Ä–æ—Ö–æ–¥–∏–ª.', 
        reply_markup = kb.debtsAlgorithm)

@router.callback_query(F.data == 'formInstruction')
async def form_instruction(callback: CallbackQuery):
    await callback.message.answer(
        '–ü–æ—Å–º–æ—Ç—Ä–∏ –≤¬†Modeus¬†‚Äî —Ç–∞–º —É–∫–∞–∑–∞–Ω–æ, –±—ã–ª–∏ –ª–∏ —É —Ç–µ–±—è: \n'
        '   ‚Ä¢ –ª–µ–∫—Ü–∏–∏ –∏ –ø—Ä–∞–∫—Ç–∏–∫–∏ —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º, \n'
        '   ‚Ä¢ –ª–µ–∫—Ü–∏–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å–∞ –∏ –ø—Ä–∞–∫—Ç–∏–∫–∏ —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º, \n'
        '   ‚Ä¢ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å.')
    #–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ 
    await callback.answer('')
    await callback.message.answer(
        '–ß—Ç–æ–±—ã —è –º–æ–≥ —Ç–µ–±–µ –ø–æ–º–æ—á—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —Ñ–æ—Ä–º—É —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ ‚Äî –∫–∞–∫ –∏–º–µ–Ω–Ω–æ —Ç—ã –µ–≥–æ –ø—Ä–æ—Ö–æ–¥–∏–ª.', 
        reply_markup = kb.debtsAlgorithm)



@router.callback_query(F.data == 'traditionalForm')
async def traditional_form(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        'üë®‚Äçüè´ –£ —Ç–µ–±—è –≤¬†Modeus¬†—É–∫–∞–∑–∞–Ω—ã –ª–µ–∫—Ü–∏–∏ –∏ –ø—Ä–∞–∫—Ç–∏–∫–∏ —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º. –í—Å—ë –≤–µ—Ä–Ω–æ?', 
        reply_markup = kb.traditionalCheck)

@router.callback_query(F.data == 'traditionalCheckBack')
async def trditional_back(callback: CallbackQuery):
    await callback.message.answer('–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥')
    await callback.answer('')
    await callback.message.answer(
        '–ß—Ç–æ–±—ã —è –º–æ–≥ —Ç–µ–±–µ –ø–æ–º–æ—á—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —Ñ–æ—Ä–º—É —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ ‚Äî –∫–∞–∫ –∏–º–µ–Ω–Ω–æ —Ç—ã –µ–≥–æ –ø—Ä–æ—Ö–æ–¥–∏–ª.', 
        reply_markup = kb.debtsAlgorithm)

@router.callback_query(F.data == 'traditionalCheckTrue')
async def traditional_check(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        '–¢—ã –ø–æ–ª—É—á–∏–ª:\n'
        '   ‚Ä¢ –ó–∞ –ù–¢–ö –º–µ–Ω–µ–µ 40 –±–∞–ª–ª–æ–≤ –ò–õ–ò \n'
        '   ‚Ä¢ –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –±–∞–ª–ª–æ–≤ –∑–∞ –ª–µ–∫—Ü–∏–∏/–ø—Ä–∞–∫—Ç–∏–∫–∏/–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ –ò–õ–ò \n'
        '   ‚Ä¢ –ù–µ —Å–¥–∞–Ω —ç–∫–∑–∞–º–µ–Ω —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º', 
        reply_markup = kb.traditionalDescriprion)

@router.callback_query(F.data == 'traditionalNTK')
async def traditional_NTK(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        'üîÅ –ù—É–∂–Ω–æ –ø–µ—Ä–µ—Å–¥–∞—Ç—å –ù–¢–ö. üìå –ß—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø–µ—Ä–µ—Å–¥–∞—á—É: \n'
        '   1. –ü–µ—Ä–µ–π–¥–∏ –Ω–∞ —Å–∞–π—Ç¬†exam1. \n'
        '   2. –ù–∞–π–¥–∏ –ø—É–Ω–∫—Ç¬†¬´–ó–∞–ø–∏—Å—å –Ω–∞ –ø–µ—Ä–µ—Å–¥–∞—á—É¬ª. \n'
        '   3. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Å—å—é ‚Äî —ç—Ç–æ –≤–∞–∂–Ω–æ!',
        reply_markup = kb.nextPage)
    
@router.callback_query(F.data == 'traditionalCurrent')
async def traditional_Current(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        'üí¨ –û–±—Ä–∞—Ç–∏—Å—å –∫ —Å–≤–æ–µ–º—É –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é ‚Äî –æ–Ω –ø–æ–¥—Å–∫–∞–∂–µ—Ç, –∫–∞–∫ –º–æ–∂–Ω–æ –¥–æ–±—Ä–∞—Ç—å –±–∞–ª–ª—ã. –≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤ –¥–Ω–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π.')
    await callback.message.answer(
        'üóì –ß—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π, –≤–≤–µ–¥–∏ —Ñ–∞–º–∏–ª–∏—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è (–æ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞ –≤¬†Modeus).',
        #–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è—Ö
        #–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–∏ 
        reply_markup = kb.nextPage)

@router.callback_query(F.data == 'traditionalExam')
async def traditional_Exam(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        '–ï—Å–ª–∏ —Ç—ã¬†–Ω–µ —Å–¥–∞–ª —Ç–æ–ª—å–∫–æ —ç–∫–∑–∞–º–µ–Ω, —Å–ª–µ–¥–∏ –∑–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –ø–µ—Ä–µ—Å–¥–∞—á –Ω–∞¬†—Å–∞–π—Ç–µ –ò–†–ò–¢-–†–¢–§.')
    await callback.message.answer(
        'üìù –í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ (–º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤¬†Modeus): ', 
        #–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –¥–∞—Ç–∞—Ö –ø–µ—Ä–µ—Å–¥–∞—á
        #–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–∏
        reply_markup = kb.nextPage)
    


@router.callback_query(F.data == 'mixedForm')
async def mixed_form(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        'üßë‚Äçüè´ –í¬†Modeus¬†—É–∫–∞–∑–∞–Ω—ã –ª–µ–∫—Ü–∏–∏ –≤ –≤–∏–¥–µ –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å–∞, –∞ –ø—Ä–∞–∫—Ç–∏–∫–∏ ‚Äî —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º. –í—Å—ë –≤–µ—Ä–Ω–æ?', 
        reply_markup = kb.mixedCheck)

@router.callback_query(F.data == 'mixedCheckBack')
async def mixed_back(callback: CallbackQuery):
    await callback.message.answer('–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥')
    await callback.answer('')
    await callback.message.answer(
        '–ß—Ç–æ–±—ã —è –º–æ–≥ —Ç–µ–±–µ –ø–æ–º–æ—á—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —Ñ–æ—Ä–º—É —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ ‚Äî –∫–∞–∫ –∏–º–µ–Ω–Ω–æ —Ç—ã –µ–≥–æ –ø—Ä–æ—Ö–æ–¥–∏–ª.', 
        reply_markup = kb.debtsAlgorithm)

@router.callback_query(F.data == 'mixedCheckTrue')
async def mixed_check(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        '–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω—É–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å? \n'
        '–ü—Ä–∞–∫—Ç–∏–∫–∏ –∏–ª–∏ –ª–µ–∫—Ü–∏–∏(–æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å)?', 
        reply_markup = kb.mixedlDescription)
    
@router.callback_query(F.data == 'mixedPractice')
async def traditional_check(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        '–¢—ã –ø–æ–ª—É—á–∏–ª:\n'
        '   ‚Ä¢ –ó–∞ –ù–¢–ö –º–µ–Ω–µ–µ 40 –±–∞–ª–ª–æ–≤ –ò–õ–ò \n'
        '   ‚Ä¢ –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –±–∞–ª–ª–æ–≤ –∑–∞ –ª–µ–∫—Ü–∏–∏/–ø—Ä–∞–∫—Ç–∏–∫–∏/–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ –ò–õ–ò \n'
        '   ‚Ä¢ –ù–µ —Å–¥–∞–Ω —ç–∫–∑–∞–º–µ–Ω —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º', 
        reply_markup = kb.traditionalDescriprion)
    
@router.callback_query(F.data == 'mixedLectures')
async def online_check(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        '–£ –í–∞—Å –Ω–∞–±—Ä–∞–Ω—ã –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ ' \
        '–±–∞–ª–ª—ã –∑–∞ –∫—É—Ä—Å?', reply_markup = kb.onlineDescriprion)



@router.callback_query(F.data == 'onlineForm')
async def online_form(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer('üìò –£ —Ç–µ–±—è –±—ã–ª —Ç–æ–ª—å–∫–æ –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å. –í—Å—ë –≤–µ—Ä–Ω–æ?', reply_markup = kb.onlineCheck)

@router.callback_query(F.data == 'onlineCheckBack')
async def online_back(callback: CallbackQuery):
    await callback.message.answer('–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥')
    await callback.answer('')
    await callback.message.answer(
        '–ß—Ç–æ–±—ã —è –º–æ–≥ —Ç–µ–±–µ –ø–æ–º–æ—á—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —Ñ–æ—Ä–º—É —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ ‚Äî –∫–∞–∫ –∏–º–µ–Ω–Ω–æ —Ç—ã –µ–≥–æ –ø—Ä–æ—Ö–æ–¥–∏–ª.', 
        reply_markup = kb.debtsAlgorithm)

@router.callback_query(F.data == 'onlineCheckTrue')
async def online_check(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer('–¢—ã –Ω–∞–±—Ä–∞–ª –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –±–∞–ª–ª—ã?', reply_markup = kb.onlineDescriprion)
    
@router.callback_query(F.data == 'onlineYes')
async def online_yes(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        '–ï—Å–ª–∏¬†–≤—Å—ë –ø—Ä–æ–π–¥–µ–Ω–æ, –Ω–æ –Ω–µ —Å–¥–∞–Ω –ø—Ä–æ–∫—Ç–æ—Ä–∏–Ω–≥¬†‚Äî ' \
        '–∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –ø–µ—Ä–µ—Å–¥–∞—á—É –ø–æ –≥—Ä–∞—Ñ–∏–∫—É –Ω–∞¬†—Å–∞–π—Ç–µ –£—Ä–§–£.', 
        reply_markup = kb.nextPage)
    
@router.callback_query(F.data == 'onlineNo')
async def online_no(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        '–ï—Å–ª–∏¬†–Ω–µ –Ω–∞–±—Ä–∞–Ω—ã –±–∞–ª–ª—ã¬†‚Äî –ø—Ä–∏–¥—ë—Ç—Å—è –ø—Ä–æ–π—Ç–∏ –∫—É—Ä—Å –∑–∞–Ω–æ–≤–æ. \n'
        'üìç–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç–µ –£—Ä–§–£ –≤ —Ä–∞–∑–¥–µ–ª–µ¬†¬´–û–Ω–ª–∞–π–Ω-–∫—É—Ä—Å—ã¬ª.',
        reply_markup = kb.nextPage)



@router.message(F.text == '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ->')
async def exit_page(message: Message):
    await message.answer(
        'üí° –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –æ—Å—Ç–∞–ª–æ—Å—å –Ω–µ–ø–æ–Ω—è—Ç–Ω—ã–º ‚Äî –Ω–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ! \n'
        '–¢—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ –ø–æ–º–æ—â—å—é –∫ —Ç—å—é—Ç–æ—Ä—É.', 
        #–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –æ —Ç—å—é—Ç–æ—Ä–∞—Ö
        reply_markup = kb.exitPage)


@router.callback_query(F.data == 'startBack')
async def traditional_Exam(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        '–ü—Ä–∏–≤–µ—Ç! üëã–Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤. '\
        '–ü–æ–º–æ–≥—É —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è, –∫–∞–∫ –∑–∞–∫—Ä—ã—Ç—å –¥–æ–ª–≥–∏ –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º: –ø–æ–¥—Å–∫–∞–∂—É, —á—Ç–æ –¥–µ–ª–∞—Ç—å, –∫—É–¥–∞ –∏–¥—Ç–∏ –∏ –∫ –∫–æ–º—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è. '\
        '–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ ‚Äî –ø—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å, —è –Ω–∞ —Å–≤—è–∑–∏ üí¨', 
        reply_markup = kb.start)
    
@router.message(F.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—á–∞–ª—É')
async def traditional_Exam(message: Message):
    await message.answer(
        '–ü—Ä–∏–≤–µ—Ç! üëã–Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤. '\
        '–ü–æ–º–æ–≥—É —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è, –∫–∞–∫ –∑–∞–∫—Ä—ã—Ç—å –¥–æ–ª–≥–∏ –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º: –ø–æ–¥—Å–∫–∞–∂—É, —á—Ç–æ –¥–µ–ª–∞—Ç—å, –∫—É–¥–∞ –∏–¥—Ç–∏ –∏ –∫ –∫–æ–º—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è. '\
        '–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ ‚Äî –ø—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å, —è –Ω–∞ —Å–≤—è–∑–∏ üí¨', 
        reply_markup = kb.start)