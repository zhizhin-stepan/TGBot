from aiogram import F, Router, types
from aiogram.types import Message, CallbackQuery, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import CommandStart, Command
from aiogram.types.web_app_info import WebAppInfo
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
import tempfile, os

from database import get_teacher_schedule, get_teacher_consultations

import app.keyboards as kb
from app.client import get_chat_response_async, get_ocr_response_async, analyze_image_and_format


router = Router()


class Form(StatesGroup):
    waiting_teacher_name = State()
    waiting_subject = State() 
    ai_chat_answers = State()
    

@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(
        '–ü—Ä–∏–≤–µ—Ç! üëã\n'
        '–Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤. \n'\
        '–ü–æ–º–æ–≥—É —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è, –∫–∞–∫ –∑–∞–∫—Ä—ã—Ç—å –¥–æ–ª–≥–∏ –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º: –ø–æ–¥—Å–∫–∞–∂—É, —á—Ç–æ –¥–µ–ª–∞—Ç—å, –∫—É–¥–∞ –∏–¥—Ç–∏ –∏ –∫ –∫–æ–º—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è. \n'\
        '–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ ‚Äî –ø—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å, —è –Ω–∞ —Å–≤—è–∑–∏ üí¨',
        reply_markup = kb.start)


@router.message(F.text == '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å')
async def debts_algorithm(message: Message, state: FSMContext):
    await state.set_state(Form.ai_chat_answers)
    await message.answer(
        '‚úèÔ∏è –ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ ‚Äî —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å –µ–≥–æ —Ä–µ—à–∏—Ç—å!\n'
        '\n–ï—â–µ –ª—É—á—à–µ, –µ—Å–ª–∏ —Ç—ã –æ—Ç–ø—Ä–∞–≤–∏—à—å —Å–∫—Ä–∏–Ω—à–æ—Ç –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–∑ –ë–†–°, '\
        '—Ç–æ–≥–¥–∞ —è —Å—Ä–∞–∑—É —Å–æ–æ–±—â—É —Ç–µ–±–µ –ø—Ä–∏—á–∏–Ω—É –¥–æ–ª–≥–∞ –∏ —á—Ç–æ —Å —ç—Ç–∏–º –¥–µ–ª–∞—Ç—å!',
        #–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –ò–ò
        reply_markup = kb.webAppPageFirst)
    
@router.message(Form.ai_chat_answers, F.text)
async def handle_text_message(message: Message, state: FSMContext):
    messageCheck = message.text.strip()
    if messageCheck in '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—á–∞–ª—É':
        await message.answer(
            '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫ –Ω–∞—á–∞–ª—É ‚ñ∂Ô∏è',
            reply_markup = kb.webAppPageFirst
        )
        await state.clear()
    else:
        status = await message.answer("ü§ñ –î—É–º–∞—é –Ω–∞–¥ –æ—Ç–≤–µ—Ç–æ–º...")

        try:
            response = await get_chat_response_async(message.text)
        except Exception as e:
            response = f"‚ùå –û—à–∏–±–∫–∞: {e}"
        
        await status.edit_text(response)
        await message.answer(
            await message.answer("–ú–æ–∂–µ—à—å —Å–ø—Ä–æ—Å–∏—Ç—å —á—Ç–æ-—Ç–æ –µ—â–µ"),
            reply_markup = kb.webAppPageFirst
        )

@router.message(Form.ai_chat_answers, F.photo)
async def handle_photo_message(message: Message, state: FSMContext):
    status = await message.answer("üñº –†–∞—Å–ø–æ–∑–Ω–∞—é –±–∞–ª–ª—ã...")

    photo = message.photo[-1]
    file = await message.bot.get_file(photo.file_id)
    file_path = file.file_path

    with tempfile.NamedTemporaryFile(delete=False, suffix=".jpg") as tmp_file:
        await message.bot.download_file(file_path, destination=tmp_file)
        temp_path = tmp_file.name

    try:
        result = await analyze_image_and_format(temp_path)  # –∑–¥–µ—Å—å —É–∂–µ –≤–µ—Ä–Ω—ë—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç!
        # result ‚Äî —ç—Ç–æ —É–∂–µ –≥–æ—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç, –∫—Ä–∞—Å–∏–≤–æ –¥–ª—è Telegram!
        result_text = result
    except Exception as e:
        result_text = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–∏: {e}"
    finally:
        os.remove(temp_path)

    await status.edit_text(result_text, parse_mode="HTML")

        



@router.message(F.text == '–ê–ª–≥–æ—Ä–∏—Ç–º –∑–∞–∫—Ä—ã—Ç–∏—è –¥–æ–ª–≥–æ–≤')
async def debts_algorithm(message: Message):
    await message.answer(
        '–ß—Ç–æ–±—ã —è –º–æ–≥ —Ç–µ–±–µ –ø–æ–º–æ—á—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —Ñ–æ—Ä–º—É —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ ‚Äî –∫–∞–∫ –∏–º–µ–Ω–Ω–æ —Ç—ã –µ–≥–æ –ø—Ä–æ—Ö–æ–¥–∏–ª.', 
        reply_markup = kb.debtsAlgorithm)

@router.callback_query(F.data == 'formInstruction')
async def form_instruction(callback: CallbackQuery):
    await callback.message.answer(
        '–ü–æ—Å–º–æ—Ç—Ä–∏ –≤¬†Modeus¬†‚Äî —Ç–∞–º —É–∫–∞–∑–∞–Ω–æ, –±—ã–ª–∏ –ª–∏ —É —Ç–µ–±—è: \n'
        '   ‚Ä¢ –ª–µ–∫—Ü–∏–∏ –∏ –ø—Ä–∞–∫—Ç–∏–∫–∏ —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º, \n'
        '   ‚Ä¢ –ª–µ–∫—Ü–∏–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å–∞ –∏ –ø—Ä–∞–∫—Ç–∏–∫–∏ —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º, \n'
        '   ‚Ä¢ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å.')
    #–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ 
    await callback.answer('')
    await callback.message.answer(
        '–ß—Ç–æ–±—ã —è –º–æ–≥ —Ç–µ–±–µ –ø–æ–º–æ—á—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —Ñ–æ—Ä–º—É —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ ‚Äî –∫–∞–∫ –∏–º–µ–Ω–Ω–æ —Ç—ã –µ–≥–æ –ø—Ä–æ—Ö–æ–¥–∏–ª.', 
        reply_markup = kb.debtsAlgorithm)



@router.callback_query(F.data == 'traditionalForm')
async def traditional_form(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        'üë®‚Äçüè´ –£ —Ç–µ–±—è –≤¬†Modeus¬†—É–∫–∞–∑–∞–Ω—ã –ª–µ–∫—Ü–∏–∏ –∏ –ø—Ä–∞–∫—Ç–∏–∫–∏ —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º. –í—Å—ë –≤–µ—Ä–Ω–æ?', 
        reply_markup = kb.traditionalCheck)

@router.callback_query(F.data == 'traditionalCheckBack')
async def trditional_back(callback: CallbackQuery):
    await callback.message.answer('–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥')
    await callback.answer('')
    await callback.message.answer(
        '–ß—Ç–æ–±—ã —è –º–æ–≥ —Ç–µ–±–µ –ø–æ–º–æ—á—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —Ñ–æ—Ä–º—É —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ ‚Äî –∫–∞–∫ –∏–º–µ–Ω–Ω–æ —Ç—ã –µ–≥–æ –ø—Ä–æ—Ö–æ–¥–∏–ª.', 
        reply_markup = kb.debtsAlgorithm)

@router.callback_query(F.data == 'traditionalCheckTrue')
async def traditional_check(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        '–¢—ã –ø–æ–ª—É—á–∏–ª:\n'
        '   ‚Ä¢ –ó–∞ –ù–¢–ö –º–µ–Ω–µ–µ 40 –±–∞–ª–ª–æ–≤ –ò–õ–ò \n'
        '   ‚Ä¢ –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –±–∞–ª–ª–æ–≤ –∑–∞ –ª–µ–∫—Ü–∏–∏/–ø—Ä–∞–∫—Ç–∏–∫–∏/–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ –ò–õ–ò \n'
        '   ‚Ä¢ –ù–µ —Å–¥–∞–Ω —ç–∫–∑–∞–º–µ–Ω —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º', 
        reply_markup = kb.traditionalDescriprion)

@router.callback_query(F.data == 'traditionalNTK')
async def traditional_NTK(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        'üîÅ –ù—É–∂–Ω–æ –ø–µ—Ä–µ—Å–¥–∞—Ç—å –ù–¢–ö. üìå –ß—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø–µ—Ä–µ—Å–¥–∞—á—É: \n'
        '   1. –ü–µ—Ä–µ–π–¥–∏ –Ω–∞ —Å–∞–π—Ç¬†exam1. \n'
        '   2. –ù–∞–π–¥–∏ –ø—É–Ω–∫—Ç¬†¬´–ó–∞–ø–∏—Å—å –Ω–∞ –ø–µ—Ä–µ—Å–¥–∞—á—É¬ª. \n'
        '   3. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Å—å—é ‚Äî —ç—Ç–æ –≤–∞–∂–Ω–æ!',
        reply_markup = kb.nextPage)
    
@router.callback_query(F.data == 'traditionalCurrent')
async def traditional_Current(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        'üí¨ –û–±—Ä–∞—Ç–∏—Å—å –∫ —Å–≤–æ–µ–º—É –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é ‚Äî –æ–Ω –ø–æ–¥—Å–∫–∞–∂–µ—Ç, –∫–∞–∫ –º–æ–∂–Ω–æ –¥–æ–±—Ä–∞—Ç—å –±–∞–ª–ª—ã. –≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤ –¥–Ω–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π.')
    await callback.message.answer(
        'üóì –ß—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π, –≤–≤–µ–¥–∏ —Ñ–∞–º–∏–ª–∏—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è (–æ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞ –≤¬†Modeus): ',
        #–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è—Ö
        #–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–∏ 
        reply_markup = kb.traditionalTable)
    
@router.callback_query(F.data == 'traditionalExam')
async def traditional_Exam(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        '–ï—Å–ª–∏ —Ç—ã¬†–Ω–µ —Å–¥–∞–ª —Ç–æ–ª—å–∫–æ —ç–∫–∑–∞–º–µ–Ω, —Å–ª–µ–¥–∏ –∑–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –ø–µ—Ä–µ—Å–¥–∞—á –Ω–∞¬†—Å–∞–π—Ç–µ –ò–†–ò–¢-–†–¢–§. \n'
        '–õ–∏–±–æ –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –æ–± —ç—Ç–æ–º —É —Å–≤–æ–µ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –ª–∏—á–Ω–æ')
    await callback.message.answer(
        'üìù –ß—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π, –≤–≤–µ–¥–∏ —Ñ–∞–º–∏–ª–∏—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è (–æ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞ –≤¬†Modeus): ', 
        #–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –¥–∞—Ç–∞—Ö –ø–µ—Ä–µ—Å–¥–∞—á
        #–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–∏
        reply_markup = kb.traditionalTable)
    

@router.callback_query(F.data == 'traditionalSchedule')
async def traditional_schedule(callback: CallbackQuery, state: FSMContext):
    await state.set_state(Form.waiting_teacher_name)
    await callback.message.answer("üîç –í–≤–µ–¥–∏—Ç–µ –§–ò–û –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:")
    
@router.message(Form.waiting_teacher_name, F.text)
async def handle_teacher_name(message: Message, state: FSMContext):
    full_name = message.text.strip()
    if full_name in '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚û°Ô∏è':
        await message.answer(
            '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏ –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É ‚ñ∂Ô∏è',
            reply_markup = kb.nextPage
        )
        await state.clear()
    else:
        records = get_teacher_consultations(full_name)
        lessons = get_teacher_schedule(full_name)

        if records or lessons:
            response = [
            f"üìÖ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –¥–ª—è {full_name}:",
            "‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî"]

            for record in records:
                day, time, room, contact = record
                contact_info = f"\n‚úâÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã: {contact}" if contact != "--" else ""
                
                response.append(
                    f"üóì –î–µ–Ω—å: {day}\n"
                    f"‚è∞ –í—Ä–µ–º—è: {time}\n"
                    f"üö™ –ê—É–¥–∏—Ç–æ—Ä–∏—è: {room}"
                    f"{contact_info}\n"
                    "‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî"
                )
            answer = [
            f"üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π –¥–ª—è {full_name}:",
            "‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî"]

            for lesson in lessons:
                day, time, room, contact = lesson
                contact_info = f"\n‚úâÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã: {contact}" if contact != "--" else ""
                
                answer.append(
                    f"üóì –î–µ–Ω—å: {day}\n"
                    f"‚è∞ –í—Ä–µ–º—è: {time}\n"
                    f"üö™ –ê—É–¥–∏—Ç–æ—Ä–∏—è: {room}"
                    f"{contact_info}\n"
                    "‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî"
                )
            await message.answer('\n'.join(response), reply_markup=kb.nextPage)
            await message.answer('\n'.join(answer), reply_markup=kb.nextPage)
        else:
            await message.answer(
                "‚ùå –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü–æ–ø—Ä–æ–±—É–π –≤–≤–µ—Å—Ç–∏ –µ–≥–æ –∏–º—è –µ—â–µ —Ä–∞–∑",
                reply_markup = kb.nextPage
            )



@router.callback_query(F.data == 'mixedForm')
async def mixed_form(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        'üßë‚Äçüè´ –í¬†Modeus¬†—É–∫–∞–∑–∞–Ω—ã –ª–µ–∫—Ü–∏–∏ –≤ –≤–∏–¥–µ –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å–∞, –∞ –ø—Ä–∞–∫—Ç–∏–∫–∏ ‚Äî —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º. –í—Å—ë –≤–µ—Ä–Ω–æ?', 
        reply_markup = kb.mixedCheck)

@router.callback_query(F.data == 'mixedCheckBack')
async def mixed_back(callback: CallbackQuery):
    await callback.message.answer('–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥')
    await callback.answer('')
    await callback.message.answer(
        '–ß—Ç–æ–±—ã —è –º–æ–≥ —Ç–µ–±–µ –ø–æ–º–æ—á—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —Ñ–æ—Ä–º—É —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ ‚Äî –∫–∞–∫ –∏–º–µ–Ω–Ω–æ —Ç—ã –µ–≥–æ –ø—Ä–æ—Ö–æ–¥–∏–ª.', 
        reply_markup = kb.debtsAlgorithm)

@router.callback_query(F.data == 'mixedCheckTrue')
async def mixed_check(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        '–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω—É–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å? \n'
        '–ü—Ä–∞–∫—Ç–∏–∫–∏ –∏–ª–∏ –ª–µ–∫—Ü–∏–∏(–æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å)?', 
        reply_markup = kb.mixedlDescription)
    
@router.callback_query(F.data == 'mixedPractice')
async def traditional_check(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        '–¢—ã –ø–æ–ª—É—á–∏–ª:\n'
        '   ‚Ä¢ –ó–∞ –ù–¢–ö –º–µ–Ω–µ–µ 40 –±–∞–ª–ª–æ–≤ –ò–õ–ò \n'
        '   ‚Ä¢ –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –±–∞–ª–ª–æ–≤ –∑–∞ –ª–µ–∫—Ü–∏–∏/–ø—Ä–∞–∫—Ç–∏–∫–∏/–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ –ò–õ–ò \n'
        '   ‚Ä¢ –ù–µ —Å–¥–∞–Ω —ç–∫–∑–∞–º–µ–Ω —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º', 
        reply_markup = kb.traditionalDescriprion)
    
@router.callback_query(F.data == 'mixedLectures')
async def online_check(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        '–£ –í–∞—Å –Ω–∞–±—Ä–∞–Ω—ã –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ ' \
        '–±–∞–ª–ª—ã –∑–∞ –∫—É—Ä—Å?', reply_markup = kb.onlineDescriprion)



@router.callback_query(F.data == 'onlineForm')
async def online_form(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer('üìò –£ —Ç–µ–±—è –±—ã–ª —Ç–æ–ª—å–∫–æ –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å. –í—Å—ë –≤–µ—Ä–Ω–æ?', reply_markup = kb.onlineCheck)

@router.callback_query(F.data == 'onlineCheckBack')
async def online_back(callback: CallbackQuery):
    await callback.message.answer('–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥')
    await callback.answer('')
    await callback.message.answer(
        '–ß—Ç–æ–±—ã —è –º–æ–≥ —Ç–µ–±–µ –ø–æ–º–æ—á—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —Ñ–æ—Ä–º—É —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ ‚Äî –∫–∞–∫ –∏–º–µ–Ω–Ω–æ —Ç—ã –µ–≥–æ –ø—Ä–æ—Ö–æ–¥–∏–ª.', 
        reply_markup = kb.debtsAlgorithm)

@router.callback_query(F.data == 'onlineCheckTrue')
async def online_check(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer('–¢—ã –Ω–∞–±—Ä–∞–ª –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –±–∞–ª–ª—ã?', reply_markup = kb.onlineDescriprion)
    
@router.callback_query(F.data == 'onlineYes')
async def online_yes(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è. \n'  
        '\n–°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞—è–≤–∫—É: https://forms.yandex.ru/u/6319b2afbbb4936cf5e3236d/ \n'
        '\n–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—è–≤–∫–∏ –∑–∞–Ω–∏–º–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π. ' \
        '–û—Ç–≤–µ—Ç —Å –¥–∞–ª—å–Ω–µ–π—à–∏–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –ø—Ä–∏–¥—ë—Ç –Ω–∞ –≤–∞—à—É –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—É—é —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É, —É–∫–∞–∑–∞–Ω–Ω—É—é –≤ –∑–∞—è–≤–∫–µ.', 
        reply_markup = kb.nextPage)
    
@router.callback_query(F.data == 'onlineNo')
async def online_no(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        '–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∑–∞–¥–∞–Ω–∏—è–º –∫—É—Ä—Å–∞ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: \n'
        '\nüìå–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —É–∫–∞–∑–∞–Ω–∞ –ø–æ—á—Ç–∞ –≤ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ. '
        '–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ —Å—Ç—É–¥–µ–Ω—Ç—ã –£—Ä–§–£ –º–æ–≥—É—Ç –æ–±—É—á–∞—Ç—å—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ–¥ –ø–æ—á—Ç–æ–π –≤ –¥–æ–º–µ–Ω–µ @urfu.me. \n'
        '\nüìå–ù–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø–æ –∞–¥—Ä–µ—Å—É ¬´openedu@urfu.ru¬ª —Å –ø—Ä–æ—Å—å–±–æ–π –¥–æ–±–∞–≤–∏—Ç—å –≤–∞—Å –≤ –≥—Ä—É–ø–ø—É ¬´–£—Ä–§–£_–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å¬ª. '
        '–í –ø–∏—Å—å–º–µ —É–∫–∞–∂–∏—Ç–µ: –§–ò–û, –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫—É—é –≥—Ä—É–ø–ø—É, –∞–¥—Ä–µ—Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–æ—á—Ç—ã –∏ —Å—Å—ã–ª–∫—É –Ω–∞ –∫—É—Ä—Å. \n'
        '\n‚ùóÔ∏è–í–∞–∂–Ω–æ: –ó–∞–ø–∏—Å—å –≤ –≥—Ä—É–ø–ø—É –¥–æ–ª–∂–Ω–∏–∫–æ–≤ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –∑–∞ –ù–ï–î–ï–õ–Æ –¥–æ –Ω–∞—Å—Ç—É–ø–ª–µ–Ω–∏—è –∫—Ä–∞–π–Ω–µ–≥–æ —Å—Ä–æ–∫–∞ —Å–¥–∞—á–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ-–æ—Ü–µ–Ω–æ—á–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π. '
        '–°—Ä–æ–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –∑–∞–¥–∞–Ω–∏–π —É–∫–∞–∑–∞–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ¬´–ì—Ä–∞—Ñ–∏–∫ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤¬ª.',
        reply_markup = kb.nextPage)



@router.message(F.text == '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚û°Ô∏è')
async def exit_page(message: Message):
    await message.answer(
        'üí° –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –æ—Å—Ç–∞–ª–æ—Å—å –Ω–µ–ø–æ–Ω—è—Ç–Ω—ã–º ‚Äî –Ω–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ! \n'
        '–í–µ—Ä–Ω–∏—Å—å –≤ —Ä–∞–∑–¥–µ–ª —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏, —Ç–∞–º —Ç—ã —Å–º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É, '
        '—É–∑–Ω–∞—Ç—å –Ω–∞–ª–∏—á–∏–µ —É —Å–µ–±—è –¥–æ–ª–≥–æ–≤ –∏ —á—Ç–æ —Å —ç—Ç–∏–º –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å.\n'
        '\n –õ–∏–±–æ —Ç—ã –º–æ–∂–µ—à—å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ –ø–æ–º–æ—â—å—é –∫ —Ç—å—é—Ç–æ—Ä—É, –µ—Å–ª–∏ –Ω–µ –Ω–∞—à–µ–ª –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å.'
        '‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n'
        'üîç–°–ø–∏—Å–æ–∫ —Ç—å—é—Ç–æ—Ä–æ–≤:\n'
        '1. –ò—Ä–∏–Ω–∞ –ö–æ–ª–º–æ–≥–æ—Ä—Ü–µ–≤–∞, –ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è - 45-50 –≥—Ä—É–ø–ø—ã, –ò–í–¢ - –†–ò-130914, –∫–æ–Ω—Ç–∞–∫—Ç - https://vk.com/id636684151\n'
        '2. –ê—Ä—Ç–µ–º –•—Ä—É—à–∫–æ–≤, –ü—Ä–∏–∫–ª–∞–¥–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞, –∫–æ–Ω—Ç–∞–∫—Ç - https://vk.com/id41032121\n'
        '3. –ê–ª–µ–Ω–∞ –°–∞–¥–æ–≤–∞, –ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è - 40-44 –≥—Ä—É–ø–ø—ã, –∫–æ–Ω—Ç–∞–∫—Ç - https://vk.com/sadova_a_a\n'
        '4. –≠–ª—å–º–∏—Ä–∞ –í–∞–ª–∏–µ–≤–∞, –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è - 11, 27, 29, –∫–æ–Ω—Ç–∞–∫—Ç - https://vk.com/elmiraw\n'
        '5. –ì–µ–æ—Ä–≥–∏–π –ë–∞–∑–∞—Ä–æ–≤, –ò–í–¢, –ê–ª–≥–æ—Ä–∏—Ç–º—ã –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–µ–∫—Ç–∞, –∫–æ–Ω—Ç–∞–∫—Ç - https://vk.com/georgybazarov\n'
        '‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî', 
        #–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –æ —Ç—å—é—Ç–æ—Ä–∞—Ö
        disable_web_page_preview=True,
        reply_markup = kb.exitPage)


@router.callback_query(F.data == 'startBack')
async def traditional_Exam(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(
        '–ü—Ä–∏–≤–µ—Ç! üëã\n'
        '–Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤. \n'\
        '–ü–æ–º–æ–≥—É —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è, –∫–∞–∫ –∑–∞–∫—Ä—ã—Ç—å –¥–æ–ª–≥–∏ –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º: –ø–æ–¥—Å–∫–∞–∂—É, —á—Ç–æ –¥–µ–ª–∞—Ç—å, –∫—É–¥–∞ –∏–¥—Ç–∏ –∏ –∫ –∫–æ–º—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è. \n'\
        '–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ ‚Äî –ø—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å, —è –Ω–∞ —Å–≤—è–∑–∏ üí¨', 
        reply_markup = kb.start)
    
@router.message(F.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—á–∞–ª—É')
async def traditional_Exam(message: Message):
    await message.answer(
        '–ü—Ä–∏–≤–µ—Ç! üëã\n'
        '–Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤. \n'\
        '–ü–æ–º–æ–≥—É —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è, –∫–∞–∫ –∑–∞–∫—Ä—ã—Ç—å –¥–æ–ª–≥–∏ –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º: –ø–æ–¥—Å–∫–∞–∂—É, —á—Ç–æ –¥–µ–ª–∞—Ç—å, –∫—É–¥–∞ –∏–¥—Ç–∏ –∏ –∫ –∫–æ–º—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è. \n'\
        '–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ ‚Äî –ø—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å, —è –Ω–∞ —Å–≤—è–∑–∏ üí¨', 
        reply_markup = kb.start)